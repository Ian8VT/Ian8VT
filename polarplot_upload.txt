<head><meta charset="utf-8" /><script src=https://cdn.plot.ly/plotly1.34.0.min.js></script><script src="file:///C:/Users/Ian/AppData/Roaming/QGIS/QGIS3\profiles\default/python/plugins\DataPlotly\jsscripts/plotly-1.34.0.min.js"></script></head><div id="a6d9c30a-6c3e-447f-8577-2dd8f350ae77" style="height: 100%; width: 100%;" class="plotly-graph-div"></div><script type="text/javascript">window.PLOTLYENV=window.PLOTLYENV || {};window.PLOTLYENV.BASE_URL="https://plot.ly";Plotly.newPlot("a6d9c30a-6c3e-447f-8577-2dd8f350ae77", [{"line": {"color": "rgb(142, 186, 217)", "dash": "solid", "width": 1}, "marker": {"color": "rgb(142, 186, 217)", "line": {"color": "rgb(31, 119, 180)", "width": 1}, "size": 9, "symbol": 0}, "mode": "markers", "name": "Rent_HD01_", "opacity": 1.0, "r": [878, 628, 1038, 895, 827, 978, 1106, 897, 828, 1148, 936, 899, 940, 1015, 892, 933, 1055, 1128, 949, 1047, 1162, 1070, 1142, 931, 1009, 897, 1173, 1047], "theta": [81.78373722265361, 326.0349713621376, 303.2030126344287, 353.291599453018, 12.224046845171529, 37.54884887360496, 60.17873759692502, 131.0087410990896, 76.13141575430498, 185.45980654171123, 39.91581952694062, 42.71332927060294, 57.746865243448006, 81.07047129781365, 76.39802921305869, 88.35251445076462, 34.71069004876048, 196.5416127091643, 104.94239790919379, 8.889289365653067, 64.84262293279089, 74.84667537032624, 328.25300235919025, 274.43649166556463, 100.91278924810277, 3.267061693553484, 90.26973347374825, 92.31439378471917], "type": "scatterpolar", "uid": "0aea5f2c-de58-11e9-ba9c-48e244d0bbb0"}], {"legend": {"orientation": "v"}, "polar": {"angularaxis": {"direction": "clockwise"}}, "showlegend": true, "title": "Monthly Rental Costs of Burlington, VT", "xaxis": {"autorange": true, "title": "CBDDIR", "type": "linear"}, "yaxis": {"autorange": true, "title": "Rent_HD01_", "type": "linear"}}, {"editable": true, "scrollZoom": true, "showLink": false, "linkText": "Export to plot.ly"})</script>
        <script>
        // additional js function to select and click on the data
        // returns the ids of the selected/clicked feature

        var plotly_div = document.getElementById('a6d9c30a-6c3e-447f-8577-2dd8f350ae77')
        var plotly_data = plotly_div.data

        // selecting function
        plotly_div.on('plotly_selected', function(data){
        var dds = {};
        dds["mode"] = 'selection'
        dds["type"] = data.points[0].data.type

        featureIds = [];
        featureIdsTernary = [];

        data.points.forEach(function(pt){
        featureIds.push(parseInt(pt.id))
        featureIdsTernary.push(parseInt(pt.pointNumber))
        dds["id"] = featureIds
        dds["tid"] = featureIdsTernary
            })
        //console.log(dds)
        window.status = JSON.stringify(dds)
        })

        // clicking function
        plotly_div.on('plotly_click', function(data){
        var featureIds = [];
        var dd = {};
        dd["fidd"] = data.points[0].id
        dd["mode"] = 'clicking'

        // loop and create dictionary depending on plot type
        for(var i=0; i < data.points.length; i++){

        // scatter plot
        if(data.points[i].data.type == 'scatter'){
            dd["uid"] = data.points[i].data.uid
            dd["type"] = data.points[i].data.type

            data.points.forEach(function(pt){
            dd["fid"] = pt.id
            })
        }

        // pie

        else if(data.points[i].data.type == 'pie'){
          dd["type"] = data.points[i].data.type
          dd["label"] = data.points[i].label
          dd["field"] = data.points[i].data.name
          console.log(data.points[i].label)
          console.log(data.points[i])
        }

        // histogram
        else if(data.points[i].data.type == 'histogram'){
            dd["type"] = data.points[i].data.type
            dd["uid"] = data.points[i].data.uid
            dd["field"] = data.points[i].data.name

            // correct axis orientation
            if(data.points[i].data.orientation == 'v'){
                dd["id"] = data.points[i].x
                dd["bin_step"] = data.points[i].data.xbins.size
            }
            else {
                dd["id"] = data.points[i].y
                dd["bin_step"] = data.points[i].data.ybins.size
            }
        }

        // box plot
        else if(data.points[i].data.type == 'box'){
            dd["uid"] = data.points[i].data.uid
            dd["type"] = data.points[i].data.type
            dd["field"] = data.points[i].data.customdata[0]

                // correct axis orientation
                if(data.points[i].data.orientation == 'v'){
                    dd["id"] = data.points[i].x
                }
                else {
                    dd["id"] = data.points[i].y
                }
            }

        // violin plot
        else if(data.points[i].data.type == 'violin'){
            dd["uid"] = data.points[i].data.uid
            dd["type"] = data.points[i].data.type
            dd["field"] = data.points[i].data.customdata[0]

                // correct axis orientation (for violin is viceversa)
                if(data.points[i].data.orientation == 'v'){
                    dd["id"] = data.points[i].x
                }
                else {
                    dd["id"] = data.points[i].y
                }
            }

        // bar plot
        else if(data.points[i].data.type == 'bar'){
            dd["uid"] = data.points[i].data.uid
            dd["type"] = data.points[i].data.type
            dd["field"] = data.points[i].data.customdata

                // correct axis orientation
                if(data.points[i].data.orientation == 'v'){
                    dd["id"] = data.points[i].x
                }
                else {
                    dd["id"] = data.points[i].y
                }
            }

        // ternary
        else if(data.points[i].data.type == 'scatterternary'){
            dd["uid"] = data.points[i].data.uid
            dd["type"] = data.points[i].data.type
            dd["field"] = data.points[i].data.customdata
            dd["fid"] = data.points[i].pointNumber
            }

            }
        window.status = JSON.stringify(dd)
        });
        </script>